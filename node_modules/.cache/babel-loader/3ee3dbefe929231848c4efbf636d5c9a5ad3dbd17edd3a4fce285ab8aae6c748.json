{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nexport const useWindowSize = () => {\n  _s();\n  // Initialize with default values\n  const [windowSize, setWindowSize] = useState({\n    width: typeof window !== \"undefined\" ? window.innerWidth : 0,\n    height: typeof window !== \"undefined\" ? window.innerHeight : 0,\n    isMobile: false,\n    isTablet: false,\n    isDesktop: true\n  });\n  useEffect(() => {\n    // Only execute if window exists (avoid SSR issues)\n    if (typeof window === \"undefined\") return;\n\n    // Handler to call on window resize\n    function handleResize() {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n\n      // Define breakpoints for responsive design\n      const isMobile = width < 768;\n      const isTablet = width >= 768 && width < 1024;\n      const isDesktop = width >= 1024;\n      setWindowSize({\n        width,\n        height,\n        isMobile,\n        isTablet,\n        isDesktop\n      });\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures effect runs only on mount and unmount\n\n  return windowSize;\n};\n_s(useWindowSize, \"4GlJv/6mJS+j5oYb74GoJk6W/V0=\");\nexport default useWindowSize;","map":{"version":3,"names":["useState","useEffect","useWindowSize","_s","windowSize","setWindowSize","width","window","innerWidth","height","innerHeight","isMobile","isTablet","isDesktop","handleResize","addEventListener","removeEventListener"],"sources":["/Users/achen1076/Desktop/3606/src/hooks/useWindowSize.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\ninterface WindowSize {\n  width: number;\n  height: number;\n  isMobile: boolean;\n  isTablet: boolean;\n  isDesktop: boolean;\n}\n\nexport const useWindowSize = (): WindowSize => {\n  // Initialize with default values\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: typeof window !== \"undefined\" ? window.innerWidth : 0,\n    height: typeof window !== \"undefined\" ? window.innerHeight : 0,\n    isMobile: false,\n    isTablet: false,\n    isDesktop: true,\n  });\n\n  useEffect(() => {\n    // Only execute if window exists (avoid SSR issues)\n    if (typeof window === \"undefined\") return;\n\n    // Handler to call on window resize\n    function handleResize() {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n\n      // Define breakpoints for responsive design\n      const isMobile = width < 768;\n      const isTablet = width >= 768 && width < 1024;\n      const isDesktop = width >= 1024;\n\n      setWindowSize({\n        width,\n        height,\n        isMobile,\n        isTablet,\n        isDesktop,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures effect runs only on mount and unmount\n\n  return windowSize;\n};\n\nexport default useWindowSize;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAU3C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAkB;EAAAC,EAAA;EAC7C;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAa;IACvDM,KAAK,EAAE,OAAOC,MAAM,KAAK,WAAW,GAAGA,MAAM,CAACC,UAAU,GAAG,CAAC;IAC5DC,MAAM,EAAE,OAAOF,MAAM,KAAK,WAAW,GAAGA,MAAM,CAACG,WAAW,GAAG,CAAC;IAC9DC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE,KAAK;IACfC,SAAS,EAAE;EACb,CAAC,CAAC;EAEFZ,SAAS,CAAC,MAAM;IACd;IACA,IAAI,OAAOM,MAAM,KAAK,WAAW,EAAE;;IAEnC;IACA,SAASO,YAAYA,CAAA,EAAG;MACtB,MAAMR,KAAK,GAAGC,MAAM,CAACC,UAAU;MAC/B,MAAMC,MAAM,GAAGF,MAAM,CAACG,WAAW;;MAEjC;MACA,MAAMC,QAAQ,GAAGL,KAAK,GAAG,GAAG;MAC5B,MAAMM,QAAQ,GAAGN,KAAK,IAAI,GAAG,IAAIA,KAAK,GAAG,IAAI;MAC7C,MAAMO,SAAS,GAAGP,KAAK,IAAI,IAAI;MAE/BD,aAAa,CAAC;QACZC,KAAK;QACLG,MAAM;QACNE,QAAQ;QACRC,QAAQ;QACRC;MACF,CAAC,CAAC;IACJ;;IAEA;IACAN,MAAM,CAACQ,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;;IAE/C;IACAA,YAAY,CAAC,CAAC;;IAEd;IACA,OAAO,MAAMP,MAAM,CAACS,mBAAmB,CAAC,QAAQ,EAAEF,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,OAAOV,UAAU;AACnB,CAAC;AAACD,EAAA,CA5CWD,aAAa;AA8C1B,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}