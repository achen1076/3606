{"ast":null,"code":"var _jsxFileName = \"/Users/achen1076/Desktop/3606/src/pages/ToolsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"../components/parts/header.tsx\";\nimport Footer from \"../components/parts/footer.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToolsPage() {\n  _s();\n  // State for the commander calculator\n  const [commanderLevel, setCommanderLevel] = useState(1);\n  const [targetLevel, setTargetLevel] = useState(60);\n  const [currentXP, setCurrentXP] = useState(0);\n  const [calculatedXP, setCalculatedXP] = useState(0);\n  const [calculatedSculptures, setCalculatedSculptures] = useState(0);\n\n  // State for the resource calculator\n  const [troops, setTroops] = useState(100000);\n  const [troopTier, setTroopTier] = useState(5);\n  const [days, setDays] = useState(30);\n  const [calculatedFood, setCalculatedFood] = useState(0);\n  const [calculatedWood, setCalculatedWood] = useState(0);\n  const [calculatedStone, setCalculatedStone] = useState(0);\n  const [calculatedGold, setCalculatedGold] = useState(0);\n\n  // Commander XP calculator\n  const calculateCommanderXP = () => {\n    // This is a simplified calculation - in a real app you'd have more accurate formulas\n    const baseXP = 1000;\n    const levelFactor = 1.5;\n    const xpNeeded = Math.round(baseXP * Math.pow(targetLevel, levelFactor) - baseXP * Math.pow(commanderLevel, levelFactor) - currentXP);\n    const sculptures = Math.ceil(xpNeeded / 1000); // Simplified calculation\n\n    setCalculatedXP(xpNeeded);\n    setCalculatedSculptures(sculptures);\n  };\n\n  // Resource calculator\n  const calculateResources = () => {\n    // Simplified calculation - in a real app you'd have more accurate formulas\n    const tierMultiplier = Math.pow(1.5, troopTier - 1);\n    const dailyFood = Math.round(troops * 10 * tierMultiplier);\n    const dailyWood = Math.round(troops * 8 * tierMultiplier);\n    const dailyStone = Math.round(troops * 5 * tierMultiplier);\n    const dailyGold = Math.round(troops * 3 * tierMultiplier);\n    setCalculatedFood(dailyFood * days);\n    setCalculatedWood(dailyWood * days);\n    setCalculatedStone(dailyStone * days);\n    setCalculatedGold(dailyGold * days);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overflow-x-hidden bg-black min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(ToolsPage, \"fzYc1g+mabhXplfXJAT/366s4Q4=\");\n_c = ToolsPage;\nvar _c;\n$RefreshReg$(_c, \"ToolsPage\");","map":{"version":3,"names":["React","useState","Header","Footer","jsxDEV","_jsxDEV","ToolsPage","_s","commanderLevel","setCommanderLevel","targetLevel","setTargetLevel","currentXP","setCurrentXP","calculatedXP","setCalculatedXP","calculatedSculptures","setCalculatedSculptures","troops","setTroops","troopTier","setTroopTier","days","setDays","calculatedFood","setCalculatedFood","calculatedWood","setCalculatedWood","calculatedStone","setCalculatedStone","calculatedGold","setCalculatedGold","calculateCommanderXP","baseXP","levelFactor","xpNeeded","Math","round","pow","sculptures","ceil","calculateResources","tierMultiplier","dailyFood","dailyWood","dailyStone","dailyGold","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/achen1076/Desktop/3606/src/pages/ToolsPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"../components/parts/header.tsx\";\nimport Footer from \"../components/parts/footer.tsx\";\n\nexport default function ToolsPage() {\n  // State for the commander calculator\n  const [commanderLevel, setCommanderLevel] = useState(1);\n  const [targetLevel, setTargetLevel] = useState(60);\n  const [currentXP, setCurrentXP] = useState(0);\n  const [calculatedXP, setCalculatedXP] = useState(0);\n  const [calculatedSculptures, setCalculatedSculptures] = useState(0);\n  \n  // State for the resource calculator\n  const [troops, setTroops] = useState(100000);\n  const [troopTier, setTroopTier] = useState(5);\n  const [days, setDays] = useState(30);\n  const [calculatedFood, setCalculatedFood] = useState(0);\n  const [calculatedWood, setCalculatedWood] = useState(0);\n  const [calculatedStone, setCalculatedStone] = useState(0);\n  const [calculatedGold, setCalculatedGold] = useState(0);\n\n  // Commander XP calculator\n  const calculateCommanderXP = () => {\n    // This is a simplified calculation - in a real app you'd have more accurate formulas\n    const baseXP = 1000;\n    const levelFactor = 1.5;\n    const xpNeeded = Math.round(baseXP * Math.pow(targetLevel, levelFactor) - baseXP * Math.pow(commanderLevel, levelFactor) - currentXP);\n    const sculptures = Math.ceil(xpNeeded / 1000); // Simplified calculation\n    \n    setCalculatedXP(xpNeeded);\n    setCalculatedSculptures(sculptures);\n  };\n\n  // Resource calculator\n  const calculateResources = () => {\n    // Simplified calculation - in a real app you'd have more accurate formulas\n    const tierMultiplier = Math.pow(1.5, troopTier - 1);\n    const dailyFood = Math.round(troops * 10 * tierMultiplier);\n    const dailyWood = Math.round(troops * 8 * tierMultiplier);\n    const dailyStone = Math.round(troops * 5 * tierMultiplier);\n    const dailyGold = Math.round(troops * 3 * tierMultiplier);\n    \n    setCalculatedFood(dailyFood * days);\n    setCalculatedWood(dailyWood * days);\n    setCalculatedStone(dailyStone * days);\n    setCalculatedGold(dailyGold * days);\n  };\n\n  return (\n    <div className=\"overflow-x-hidden bg-black min-h-screen\">\n      <Header />\n\n      <Footer />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}